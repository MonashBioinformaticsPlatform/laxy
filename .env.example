# These settings can be passed to the app via environment variables,
# or defined in a file called .env
# See: https://django-environ.readthedocs.io

LAXY_DEBUG=yes
# Enables Django and Docker compose options to use SSL/TLS (https).
# Certificates are acquired via Let's Encrypt in http-01 mode automatically,
# so you'll need a real domain name pointing to the running app (defined below)
# before enabling this option.
LAXY_USE_SSL=no

# SQLite isn't supported
# LAXY_DATABASE_URL=sqlite:///db.sqlite3

LAXY_DATABASE_URL=postgres://postgres:postgres@localhost:5432/laxy_db
LAXY_BROKER_URL=amqp://guest@localhost

#### WARNING: Don't commit these to a repo if defined in a file !
# the secret key is automatically generated in .secret_key if left undefined
# LAXY_SECRET_KEY=X123456789X
LAXY_AWS_ACCESS_KEY_ID=NOPENOT4UASDF
LAXY_AWS_SECRET_ACCESS_KEY=SUP3RS3CR3TK3YUC4N7S33
LAXY_EMAIL_HOST_PASSWORD=s333ccrr333tt!!
####

LAXY_EMAIL_HOST_URL=smtp+tls://smtp.mailgun.org:587
LAXY_EMAIL_HOST_USER=postmaster@example.com

LAXY_STATIC_ROOT=/www/html/myapp/static
LAXY_ALLOWED_HOSTS=localhost,example.com

# These values must be acquired from Google, eg via a project at:
# https://console.developers.google.com/apis/credentials
LAXY_SOCIAL_AUTH_GOOGLE_OAUTH2_KEY=blaf00BigMess.apps.googleusercontent.com
LAXY_SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET=SomeLongSecretFromGoogle

# The high-level domain the frontend will be served from must be set here
# The CSRF cookie is set to this domain, allowing cross-site requests
# between subdomains (eg if you want to allow dev.laxy.io to POST to api.laxy.io).
LAXY_CSRF_COOKIE_DOMAIN=localhost

LAXY_CORS_ORIGIN_WHITELIST="localhost, laxy.example.com, laxy.example.com"

# Applies to HTTPS only
LAXY_CSRF_TRUSTED_ORIGINS="localhost, laxy.example.com"

################################################################################
# For frontend build (Webpack)

# The client ID obtained here: https://console.developers.google.com/apis/credentials
LAXY_FRONTEND_GOOGLE_OAUTH_CLIENT_ID=some-client-id-from-google.apps.googleusercontent.com

# For Google OAuth2, LAXY_FRONTEND_URL URL must also be registered as a valid redirect_url here:
# https://console.developers.google.com/apis/credentials
# Leave LAXY_FRONTEND_URL and LAXY_FRONTEND_API_URL unset in local env dev to builds.
# When unset, the frontend defaults to building with endpoints http://localhost:8002 and http://localhost:8001
# LAXY_FRONTEND_URL=http://localhost:8002
# LAXY_FRONTEND_API_URL=http://localhost:8001

################################################################################
# For Docker Compose
# LAXY_DATABASE_URL=postgres://postgres:postgres@db:5432
# LAXY_BROKER_URL=amqp://guest@rabbit

LAXY_ADMIN_EMAIL=admin@example.com
LAXY_ADMIN_USERNAME=admin
LAXY_ADMIN_PASSWORD=adminpass

POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=postgres
PGDATA=/var/lib/postgresql/data/pgdata

FLOWER_BASIC_AUTH=user:pass

# Space separated list, passed to Let's Encrypt acme-client in ssl-certs-cron service/container
ACME_SSL_DOMAINS=example.com laxy.example.com
