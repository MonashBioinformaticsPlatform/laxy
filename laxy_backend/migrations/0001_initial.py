# Generated by Django 2.0.8 on 2018-11-23 00:08

import collections
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import laxy_backend.models
import laxy_backend.util


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(default=laxy_backend.util.generate_uuid, editable=False, max_length=24, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AccessToken',
            fields=[
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=laxy_backend.util.generate_uuid, editable=False, max_length=24, primary_key=True, serialize=False)),
                ('token', models.CharField(db_index=True, default=laxy_backend.models._generate_access_token_string, max_length=64)),
                ('expiry_time', models.DateTimeField(blank=True, null=True)),
                ('object_id', models.CharField(db_index=True, max_length=24, null=True)),
                ('content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.ContentType')),
            ],
            options={
                'get_latest_by': ['-modified_time'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ComputeResource',
            fields=[
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=laxy_backend.util.generate_uuid, editable=False, max_length=24, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('created', 'object_created'), ('starting', 'starting'), ('online', 'online'), ('error', 'error'), ('offline', 'offline'), ('terminating', 'terminating'), ('decommissioned', 'decommissioned')], default='created', max_length=64)),
                ('host', models.CharField(blank=True, max_length=255, null=True)),
                ('gateway_server', models.CharField(blank=True, max_length=255, null=True)),
                ('disposable', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('extra', django.contrib.postgres.fields.jsonb.JSONField(default=collections.OrderedDict)),
            ],
            options={
                'get_latest_by': ['-modified_time'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventLog',
            fields=[
                ('id', models.CharField(default=laxy_backend.util.generate_uuid, editable=False, max_length=24, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('event', models.CharField(max_length=64)),
                ('message', models.CharField(blank=True, max_length=256, null=True)),
                ('extra', django.contrib.postgres.fields.jsonb.JSONField(default=collections.OrderedDict)),
                ('object_id', models.CharField(db_index=True, max_length=24, null=True)),
                ('content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ['-timestamp'],
                'get_latest_by': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=laxy_backend.util.generate_uuid, editable=False, max_length=24, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('path', models.CharField(blank=True, max_length=4096, null=True)),
                ('checksum', models.CharField(blank=True, max_length=255, null=True)),
                ('location', laxy_backend.models.ExtendedURIField(max_length=2048)),
                ('type_tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=[], null=True, size=None)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(default=collections.OrderedDict)),
            ],
        ),
        migrations.CreateModel(
            name='FileSet',
            fields=[
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=laxy_backend.util.generate_uuid, editable=False, max_length=24, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=2048)),
                ('path', models.CharField(blank=True, max_length=4096, null=True)),
            ],
            options={
                'get_latest_by': ['-modified_time'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=laxy_backend.util.generate_uuid, editable=False, max_length=24, primary_key=True, serialize=False)),
                ('secret', models.CharField(blank=True, default=laxy_backend.util.generate_secret_key, max_length=255, null=True)),
                ('status', models.CharField(choices=[('created', 'object_created'), ('hold', 'hold'), ('starting', 'starting'), ('running', 'running'), ('failed', 'failed'), ('cancelled', 'cancelled'), ('complete', 'complete')], default='created', max_length=64)),
                ('exit_code', models.IntegerField(blank=True, null=True)),
                ('remote_id', models.CharField(blank=True, max_length=64, null=True)),
                ('params', django.contrib.postgres.fields.jsonb.JSONField(default=collections.OrderedDict)),
                ('completed_time', models.DateTimeField(blank=True, null=True)),
                ('compute_resource', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobs', to='laxy_backend.ComputeResource')),
                ('input_files', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobs_as_input', to='laxy_backend.FileSet')),
                ('output_files', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobs_as_output', to='laxy_backend.FileSet')),
            ],
            options={
                'get_latest_by': ['-modified_time'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PipelineRun',
            fields=[
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=laxy_backend.util.generate_uuid, editable=False, max_length=24, primary_key=True, serialize=False)),
                ('pipeline', models.CharField(blank=True, max_length=256, null=True)),
                ('params', django.contrib.postgres.fields.jsonb.JSONField(default=collections.OrderedDict)),
                ('description', models.CharField(blank=True, max_length=2048, null=True)),
            ],
            options={
                'get_latest_by': ['-modified_time'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SampleSet',
            fields=[
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=laxy_backend.util.generate_uuid, editable=False, max_length=24, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=2048, null=True)),
                ('samples', django.contrib.postgres.fields.jsonb.JSONField(default=list)),
            ],
            options={
                'get_latest_by': ['-modified_time'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('image_url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='sampleset',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samplesets', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pipelinerun',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pipeline_runs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pipelinerun',
            name='sample_set',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pipeline_runs', to='laxy_backend.SampleSet'),
        ),
        migrations.AddField(
            model_name='job',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fileset',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='filesets', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='file',
            name='fileset',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='files', to='laxy_backend.FileSet'),
        ),
        migrations.AddField(
            model_name='file',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eventlog',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_logs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='computeresource',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='compute_resources', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='accesstoken',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='access_tokens', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['path', 'name'], name='laxy_backen_path_0d7cc9_idx'),
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['fileset', 'path', 'name'], name='laxy_backen_fileset_2dcf78_idx'),
        ),
    ]
