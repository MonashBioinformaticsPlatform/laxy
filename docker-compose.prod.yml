version: '3.2'

networks:
  private:

volumes:
  static_assets:
  dbdata:

services:

  django:
    image: "${IMAGE_REPO-registry.gitlab.com/pansapiens/}laxy:latest"
    # We must specify the .env file so that it gets sourced - otherwise every variable in .env would
    # need to be explicitly defined like: LAXY_DEBUG=${LAXY_DEBUG} in the environment section below.
    env_file:
      - .env
    environment:
      - LAXY_DEBUG=no
      - LAXY_STATIC_ROOT=/usr/share/nginx/html/backend_static
      - LAXY_STATIC_URL=${LAXY_FRONTEND_URL-//laxy.io}/backend_static/
    deploy:
      restart_policy:
        condition: any
    volumes:
      -  static_assets:/usr/share/nginx/html
# TODO: Make Django only accessible from the private Docker network, via
#       'expose' rather than 'ports', reverse proxy via nginx config
#   expose:
#     - "8001:8001"
    ports:
      - "8001:8001"
    networks:
      - private
    command: bash -c "sleep 10 &&
                      mkdir -p '${LAXY_STATIC_ROOT:-/usr/share/nginx/html/backend_static}' &&
                      cp -r /app/laxy_frontend/dist/* /usr/share/nginx/html/ &&
                      python3 manage.py makemigrations --no-input &&
                      python3 manage.py migrate --no-input &&
                      python3 manage.py collectstatic --no-input &&
                      python3 manage.py runserver 0.0.0.0:8001"
                      # TODO: Fix running under gunicorn
                      # gunicorn laxy.wsgi -b 0.0.0.0:8001"

  db:
    env_file:
      - .env
#    environment:
#      - POSTGRES_USER="${POSTGRES_USER}"
#      - POSTGRES_PASSWORD="${POSTGRES_PASSWORD}"
#      - POSTGRES_DB="${POSTGRES_DB}"
#      - PGDATA="${PGDATA}"
    deploy:
      restart_policy:
        condition: any
      # We always place the db container on the manager node so it
      # will be located with it's persistent volume container 'dbdata'
      placement:
        constraints: [node.role == manager]
    networks:
      - private

  rabbitmq:
    deploy:
      restart_policy:
        condition: any
    networks:
      - private

  celeryd:
    image: "${IMAGE_REPO-registry.gitlab.com/pansapiens/}laxy:latest"
    # command: bash -c "celery -A laxy worker -B -E -l info --broker=${LAXY_BROKER_URL}"
    env_file:
      - .env
    environment:
      - LAXY_DEBUG=no
    deploy:
      restart_policy:
        condition: any
    networks:
      - private

  flower:
    image: "${IMAGE_REPO-registry.gitlab.com/pansapiens/}laxy:latest"
    env_file:
      - .env
    environment:
      - LAXY_DEBUG=no
    deploy:
      restart_policy:
        condition: any
      # - FLOWER_BASIC_AUTH=${FLOWER_USER:?must_set_FLOWER_USER_env_var}:${FLOWER_PASS:?must_set_FLOWER_PASS_env_var}
    ports:
      - "5556:5556"
    networks:
      - private

  nginx:
    deploy:
      restart_policy:
        condition: any
    ports:
      # production
      - "80:80"
    networks:
      - private
    volumes:
       - static_assets:/usr/share/nginx/html:ro
