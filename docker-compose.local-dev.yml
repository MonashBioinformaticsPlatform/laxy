version: '3.7'
services:

  db:
    ports:
      # postgres accessible on the host at 5433 for debugging
      - "5433:5432"

  django:
    image: laxy:dev
    build:
      context: .
      dockerfile: ./docker/laxy/Dockerfile
    environment:
      - LAXY_DEBUG=yes
      - LAXY_SSL=no
      - LAXY_DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - LAXY_BROKER_URL=amqp://guest@rabbitmq
      - LAXY_ADMIN_EMAIL=admin@example.com
      - LAXY_ADMIN_USERNAME=admin
      - LAXY_ADMIN_PASSWORD=adminpass
      - LAXY_SECRET_KEY=_do_please_change_this_in_production_
    volumes:
      - .:/app
    # Django app is publicly accessible without reverse proxy
    ports:
      - "8001:8001"
    logging:
      driver: "json-file"
      options:
        max-size: "10k"
        max-file: "1"
    depends_on:
      - db
    command: bash -c "sleep 10 &&
                    python3 manage.py migrate --no-input --run-syncdb &&
                    python3 manage.py migrate --no-input &&
                    python3 manage.py makemigrations --no-input &&
                    python3 manage.py migrate --no-input &&
                    python3 manage.py shell -c \"from os import environ as env; from django.contrib.auth import get_user_model; username = env.get('LAXY_ADMIN_USERNAME', 'admin'); User = get_user_model(); User.objects.filter(username=username).count() or User.objects.create_superuser(username, env.get('LAXY_ADMIN_EMAIL', None), env.get('LAXY_ADMIN_PASSWORD', None));\" &&
                    python3 manage.py runserver 0.0.0.0:8001"

 # This is npm + webpack, automatically rebuilding upon changes and serving on port 8002.
 # The source code directory on your host is mounted inside the container, so changes
 # you make will trigger automatic rebuilds (via webpack --watch).
 # If you prefer to run npm yourself outside a container, comment this out and run
 # "npm install && npm run server" manually.
  dev-frontend-server:
    image: node:10-buster
    working_dir: /app
    environment:
      - LAXY_DEBUG=yes
      - LAXY_SSL=no
    volumes:
      - .:/app
    # Frontend webpack-dev-server publicly accessible on port 8002
    ports:
      - "8002:8002"
    logging:
      driver: "json-file"
      options:
        max-size: "10k"
        max-file: "1"
    restart: "unless-stopped"
    command: bash -c "cd /app/laxy_frontend &&
                      npm install &&
                      npm run server"
    depends_on:
      - django

  splash:
    image: scrapinghub/splash:latest
    command: --disable-lua --disable-browser-caches --max-timeout 300
    ports:
      - "8050:8050"
    depends_on:
      - django
    #  - celeryd

  ##
  # Disabled services not required for simple local dev, overridden from base docker-compose.yml
  ##

  # For simple local development, we run in Django debug mode (LAXY_DEBUG=yes) with CELERY_ALWAYS_EAGER=True
  # so that celery tasks run non-async in the Django process. We don't need the celery daemon in this case.
  celeryd:
    image: alpine
    entrypoint:
      - /bin/echo
    command: "Service disabled"
    restart: "no"

  # We don't need flower if we aren't using celeryd
  flower:
    image: alpine
    entrypoint:
      - /bin/echo
    command: "Service disabled"
    restart: "no"

  nginx:
    image: alpine
    entrypoint:
      - /bin/echo
    command: "Service disabled"
    restart: "no"
    ports:
      # dev
      - "9999:80"

  portainer:
    image: alpine
    entrypoint:
      - /bin/echo
    command: "Service disabled"
    restart: "no"
